plugins {
    id 'java'
    id 'maven-publish'
    id 'antlr'
    id "org.sonarqube"
}

archivesBaseName = "apoc"

apply plugin: 'com.github.johnrengelman.shadow'

jar {
    manifest {
        attributes 'Implementation-Version': version
    }
    duplicatesStrategy = 'exclude'
}


configurations {
    apt
}

shadowJar {
    archiveClassifier.set('core')
    duplicatesStrategy = 'exclude'
}

javadoc {
    failOnError = false
    options.addStringOption('Xdoclint:none', '-quiet')
}


generateGrammarSource {
    arguments += ["-package", "apoc.custom"]
}

dependencies {
    testImplementation project(':test-utils')
    apt project(':processor')

    apt group: 'org.neo4j', name: 'neo4j', version: neo4jVersionEffective
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.14'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    implementation group: 'net.minidev', name: 'json-smart', version: '2.4.2'
    implementation group: 'org.hdrhistogram', name: 'HdrHistogram', version: '2.1.9'

    antlr "org.antlr:antlr4:4.7.2", {
        exclude group: 'org.glassfish'
        exclude group: 'com.ibm.icu'
        exclude group: 'org.abego.treelayout'
    }
    // compileOnly "org.antlr:antlr4-runtime:4.7.2"
    // testCompile "org.antlr:antlr4-runtime:4.7.2"

    implementation group: 'org.roaringbitmap', name: 'RoaringBitmap', version: '0.7.17'
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    implementation(group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7') {
        exclude group: "org.yaml"
        exclude module: "snakeyaml"
    }
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.26'
    testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
    implementation group: 'com.github.seancfoley', name: 'ipaddress', version: '5.3.3'

    testImplementation 'net.sourceforge.jexcelapi:jxl:2.6.12'

    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.270'
    testImplementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.270'

    testImplementation group: 'org.reflections', name: 'reflections', version: '0.9.11', { exclude group: 'com.google.guava', module: 'guava' }
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: 'org.neo4j.test', name: 'neo4j-harness', version: neo4jVersionEffective
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.2.22.v20170606'
    testImplementation group: 'org.apache.derby', name: 'derby', version: '10.12.1.1'

    testImplementation group: 'org.neo4j', name: 'neo4j-common', version: neo4jVersionEffective, classifier: "tests"
    testImplementation group: 'org.neo4j.community', name: 'it-test-support', version: neo4jVersionEffective // , classifier: "tests"
    testImplementation group: 'org.neo4j', name: 'log-test-utils', version: neo4jVersionEffective // , classifier: "tests"


    testImplementation group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersionEffective, classifier: "tests"
    testImplementation group: 'org.neo4j', name: 'neo4j-io', version: neo4jVersionEffective, classifier: "tests"


    def withoutServers = {
        exclude group: 'org.eclipse.jetty'
        exclude group: 'org.eclipse.jetty.aggregate'
        exclude group: 'org.apache.hive', module: 'hive-service'
    }

    compileOnly group: 'org.neo4j', name: 'neo4j', version: neo4jVersionEffective
    compileOnly group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.7'

    testImplementation 'org.mock-server:mockserver-netty:3.10.8'
    testImplementation 'org.mock-server:mockserver-client-java:3.10.8'

    compileOnly group: 'com.amazonaws', name: 'aws-java-sdk-comprehend', version: '1.11.683'
    testImplementation group: 'com.amazonaws', name: 'aws-java-sdk-comprehend', version: '1.11.683'

    testImplementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.7'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.5.1'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.6'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    compileOnly group: 'org.ow2.asm', name: 'asm', version: '5.0.2'

    testImplementation group: 'org.apache.hive', name: 'hive-jdbc', version: '1.2.2', withoutServers

    compileOnly group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.7.5', withoutServers
    compileOnly group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.7.5', withoutServers

    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    //compileOnly group: 'org.apache.commons', name: 'commons-text', version: '1.7'
//    jmh group: 'org.neo4j', name: 'neo4j-lucene-index', version: neo4jVersionEffective
//    jmh group: 'org.neo4j', name: 'neo4j-kernel', version: neo4jVersionEffective, classifier: "tests"

    testImplementation group: 'org.xmlunit', name: 'xmlunit-core', version: '2.2.1'
    testImplementation group: 'com.github.adejanovski', name: 'cassandra-jdbc-wrapper', version: '3.1.0'

    testImplementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.9.7'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.2.0'

    compileOnly group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.92.0'
    testImplementation group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.92.0', {
        exclude group: 'com.google.guava', module: 'guava'
    }

    // there is a compatibility problem between the Guava Library used by HDFS, Google Cloud Storage and Reflections; the only version that fits for all is the following
    implementation group: 'com.google.guava', name: 'guava', version: '20.0'

    configurations.all {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}


// tweaks for CI
if (System.env.CI == 'true') {
  allprojects {
    tasks.withType(GroovyCompile) {
      groovyOptions.fork = false
    }
    tasks.withType(Test) {
      // containers (currently) have 2 dedicated cores and 4GB of memory
      maxParallelForks = 2
      minHeapSize = '128m'
    }
  }
}

task copyRuntimeLibs(type: Copy) {
    into "lib"
    from configurations.testRuntimeClasspath
}