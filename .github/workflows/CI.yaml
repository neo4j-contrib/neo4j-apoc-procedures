name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TEAMCITY_DOCKER_DEV_URL: ${{ secrets.TEAMCITY_DOCKER_DEV_URL }}
      TEAMCITY_DEV_URL: ${{ secrets.TEAMCITY_DEV_URL }}
      TEAMCITY_USER: ${{ secrets.TEAMCITY_USER }}
      TEAMCITY_PASSWORD: ${{ secrets.TEAMCITY_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Download neo4j dev docker container
        run: |
          curl -L0 -u "${TEAMCITY_USER}:${TEAMCITY_PASSWORD}" -X GET ${TEAMCITY_DOCKER_DEV_URL} -o neo4j-docker.tar
          docker load --input neo4j-docker.tar

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: chmod +x gradlew && ./gradlew build

      - name: Clean neo4j artifacts
        if: ${{ always() }} # run this step even if previous step failed
        run: |
          (find ~/.gradle/caches -name "*neo4j*" -exec rm -rf {} \;) || echo "All neo4j files cleaned"
          rm -rf neo4j-docker.tar

      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: |
            core/build/reports/tests/test/
            full/build/reports/tests/test/
