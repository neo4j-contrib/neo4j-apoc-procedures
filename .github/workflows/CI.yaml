name: CI

on:
  push:
    branches: [ "5.23" ]
  pull_request:
    branches: [ "5.23" ]

env:
  DOCKER_ENTERPRISE_URL: ${{ secrets.DOCKER_ENTERPRISE_DEV_URL }}
  DOCKER_COMMUNITY_URL: ${{ secrets.DOCKER_COMMUNITY_DEV_URL }}
  TEAMCITY_DEV_URL: ${{ secrets.TEAMCITY_DEV_URL }}
  TEAMCITY_USER: ${{ secrets.TEAMCITY_USER }}
  TEAMCITY_PASSWORD: ${{ secrets.TEAMCITY_PASSWORD }}
  ENTERPRISE_TAR: enterprise-docker.tar
  COMMUNITY_TAR: community-docker.tar
  CODEARTIFACT_DOWNLOAD_URL: ${{ secrets.CODEARTIFACT_DOWNLOAD_URL }}
  CODEARTIFACT_USERNAME: ${{ secrets.CODEARTIFACT_USERNAME }}
  

jobs:
  code-ql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript' ]
    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      
      - name: Configure CodeArtifact Authentication Token 
        run: |
          CODEARTIFACT_TOKEN=`aws codeartifact get-authorization-token --domain build-service-live --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text`
          echo "::add-mask::$CODEARTIFACT_TOKEN"
          echo "CODEARTIFACT_TOKEN=$CODEARTIFACT_TOKEN" >> "$GITHUB_ENV"

      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-jdk
      - uses: ./.github/actions/setup-gradle-cache
      
      - name: Compile Java
        run: |
          chmod +x gradlew
          ./gradlew --no-daemon --init-script init.gradle clean
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      
      # Autobuild attempts to build any compiled languages 
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
  
  tests:
    strategy:
      fail-fast: false
      matrix:
        project: [ 'extended', 'extended-it' ]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      
      - name: Configure CodeArtifact Authentication Token 
        run: |
          CODEARTIFACT_TOKEN=`aws codeartifact get-authorization-token --domain build-service-live --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text`
          echo "::add-mask::$CODEARTIFACT_TOKEN"
          echo "CODEARTIFACT_TOKEN=$CODEARTIFACT_TOKEN" >> "$GITHUB_ENV"

      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.8'
          distribution: 'temurin'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Init gradle
        run: |
          chmod +x gradlew
          ./gradlew --init-script init.gradle

      - name: Run ${{ matrix.project }} tests
        uses: ./.github/actions/test-gradle-project
        with:
          project-name: ${{ matrix.project }}