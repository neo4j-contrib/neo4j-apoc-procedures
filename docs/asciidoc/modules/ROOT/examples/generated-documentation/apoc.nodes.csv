¦Qualified Name¦Type¦Release
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.collapse icon:book[]]

apoc.nodes.collapse([nodes...],[{properties:'overwrite' or 'discard' or 'combine'}]) yield from, rel, to merge nodes onto first in list
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.cycles icon:book[]]

CALL apoc.nodes.cycles([nodes], 'type', $config) - Detect all path cycles from node list with the relationship type specified by 'type' (or with all types if the parameter is empty/null)
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.delete icon:book[]]

apoc.nodes.delete(node\|nodes\|id\|[ids]) - quickly delete all nodes with these ids
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.get icon:book[]]

apoc.nodes.get(node\|nodes\|id\|[ids]) - quickly returns all nodes with these ids
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.group icon:book[]]


|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.link icon:book[]]

apoc.nodes.link([nodes],'REL_TYPE', conf) - creates a linked list of nodes from first to last
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.rels icon:book[]]

apoc.get.rels(rel\|id\|[ids]) - quickly returns all relationships with these ids
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.connected icon:book[]]

apoc.nodes.connected(start, end, rel-direction-pattern) - returns true when the node is connected to the other node, optimized for dense nodes
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.nodes/apoc.nodes.adoc[apoc.nodes.isDense icon:book[]]

apoc.nodes.isDense(node) - returns true if it is a dense node
|label:function[]
|label:apoc-core[]
