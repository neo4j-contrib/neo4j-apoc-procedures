¦Qualified Name¦Type¦Release
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.add icon:book[]]

add a trigger kernelTransaction under a name, in the kernelTransaction you can use \{createdNodes}, \{deletedNodes} etc., the selector is {phase:'before/after/rollback'} returns previous and new trigger information. Takes in an optional configuration.
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.list icon:book[]]

CALL apoc.trigger.list() | list all currently working triggers for all databases for the session database
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.pause icon:book[]]

CALL apoc.trigger.pause(name) \| it pauses the trigger
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.remove icon:book[]]

remove previously added trigger, returns trigger information
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.removeAll icon:book[]]

removes all previously added trigger, returns trigger information
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.resume icon:book[]]

CALL apoc.trigger.resume(name) \| it resumes the paused trigger
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.nodesByLabel icon:book[]]


|label:function[]
|label:apoc-full[]
|xref::overview/apoc.trigger/apoc.trigger.adoc[apoc.trigger.propertiesByKey icon:book[]]


|label:function[]
|label:apoc-full[]
