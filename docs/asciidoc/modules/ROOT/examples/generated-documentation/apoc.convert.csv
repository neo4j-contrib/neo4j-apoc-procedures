¦Qualified Name¦Type¦Release
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.setJsonProperty icon:book[]]

apoc.convert.setJsonProperty(node,key,complexValue) - sets value serialized to JSON as property with the given name on the node
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toTree icon:book[]]

apoc.convert.toTree([paths],[lowerCaseRels=true], [config]) creates a stream of nested documents representing the at least one root of these paths
|label:procedure[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.fromJsonList icon:book[]]

apoc.convert.fromJsonList('[1,2,3]'[,'json-path', 'path-options'])
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.fromJsonMap icon:book[]]

apoc.convert.fromJsonMap('{"a":42,"b":"foo","c":[1,2,3]}'[,'json-path', 'path-options'])
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.getJsonProperty icon:book[]]

apoc.convert.getJsonProperty(node,key[,'json-path', 'path-options']) - converts serialized JSON in property back to original object
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.getJsonPropertyMap icon:book[]]

apoc.convert.getJsonPropertyMap(node,key[,'json-path', 'path-options']) - converts serialized JSON in property back to map
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toBoolean icon:book[]]

apoc.convert.toBoolean(value) \| tries it's best to convert the value to a boolean
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toBooleanList icon:book[]]

apoc.convert.toBooleanList(value) \| tries it's best to convert the value to a list of booleans
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toFloat icon:book[]]

apoc.convert.toFloat(value) \| tries it's best to convert the value to a float
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toIntList icon:book[]]

apoc.convert.toIntList(value) \| tries it's best to convert the value to a list of integers
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toInteger icon:book[]]

apoc.convert.toInteger(value) \| tries it's best to convert the value to an integer
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toJson icon:book[]]

apoc.convert.toJson([1,2,3]) or toJson({a:42,b:"foo",c:[1,2,3]}) or toJson(NODE/REL/PATH)
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toList icon:book[]]

apoc.convert.toList(value) \| tries it's best to convert the value to a list
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toMap icon:book[]]

apoc.convert.toMap(value) \| tries it's best to convert the value to a map
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toNode icon:book[]]

apoc.convert.toNode(value) \| tries it's best to convert the value to a node
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toNodeList icon:book[]]

apoc.convert.toNodeList(value) \| tries it's best to convert the value to a list of nodes
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toRelationship icon:book[]]

apoc.convert.toRelationship(value) \| tries it's best to convert the value to a relationship
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toRelationshipList icon:book[]]

apoc.convert.toRelationshipList(value) \| tries it's best to convert the value to a list of relationships
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toSet icon:book[]]

apoc.convert.toSet(value) \| tries it's best to convert the value to a set
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toSortedJsonMap icon:book[]]

apoc.convert.toSortedJsonMap(node\|map, ignoreCase:true) - returns a JSON map with keys sorted alphabetically, with optional case sensitivity
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toString icon:book[]]

apoc.convert.toString(value) \| tries it's best to convert the value to a string
|label:function[]
|label:apoc-core[]
|xref::overview/apoc.convert/apoc.convert.adoc[apoc.convert.toStringList icon:book[]]

apoc.convert.toStringList(value) \| tries it's best to convert the value to a list of strings
|label:function[]
|label:apoc-core[]
