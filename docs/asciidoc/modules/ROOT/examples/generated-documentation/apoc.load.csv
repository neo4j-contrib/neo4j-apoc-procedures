¦Qualified Name¦Type
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.csv icon:book[]]

apoc.load.csv('url',\{config}) YIELD lineNo, list, map - load CSV from URL as stream of values,
 config contains any of: {skip:1,limit:5,header:false,sep:'TAB',ignore:['tmp'],nullValues:['na'],arraySep:';',mapping:{years:{type:'int',arraySep:'-',array:false,name:'age',ignore:false}}
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.csvParams icon:book[]]

apoc.load.csvParams('url', {httpHeader: value}, payload, \{config}) YIELD lineNo, list, map - load from CSV URL (e.g. web-api) while sending headers / payload to load CSV from URL as stream of values,
 config contains any of: {skip:1,limit:5,header:false,sep:'TAB',ignore:['tmp'],nullValues:['na'],arraySep:';',mapping:{years:{type:'int',arraySep:'-',array:false,name:'age',ignore:false}}
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.directory icon:book[]]

apoc.load.directory('pattern', 'urlDir', \{config}) YIELD value - Loads list of all files in the folder specified by the parameter urlDir satisfying the given pattern. If the parameter urlDir is not specified or empty, the files of the import folder are loaded instead.
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.driver icon:book[]]

apoc.load.driver('org.apache.derby.jdbc.EmbeddedDriver') register JDBC driver of source database
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.html icon:book[]]

apoc.load.html('url',{name: jquery, name2: jquery}, config) YIELD value - Load Html page and return the result as a Map
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.jdbc icon:book[]]

apoc.load.jdbc('key or url','table or statement', params, config) YIELD row - load from relational database, from a full table or a sql statement
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.jdbcParams icon:book[]]

deprecated - please use: apoc.load.jdbc('key or url','',[params]) YIELD row - load from relational database, from a sql statement with parameters
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.jdbcUpdate icon:book[]]

apoc.load.jdbcUpdate('key or url','statement',[params],config) YIELD row - update relational database, from a SQL statement with optional parameters
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.ldap icon:book[]]

apoc.load.ldap("key" or \{connectionMap},\{searchMap}) Load entries from an ldap source (yield entry)
|label:procedure[]
|xref::overview/apoc.load/apoc.load.adoc[apoc.load.xls icon:book[]]

apoc.load.xls('url','selector',\{config}) YIELD lineNo, list, map - load XLS fom URL as stream of row values,
 config contains any of: {skip:1,limit:5,header:false,ignore:['tmp'],arraySep:';',mapping:{years:{type:'int',arraySep:'-',array:false,name:'age',ignore:false, dateFormat:'iso_date', dateParse:['dd-MM-yyyy']}}
|label:procedure[]
