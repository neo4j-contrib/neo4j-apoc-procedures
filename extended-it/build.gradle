plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow'
    id 'maven-publish'
    id 'antlr'
    id "org.jetbrains.kotlin.jvm" version "1.6.0"
    id "com.diffplug.spotless" version "6.7.2"
}

description = 'APOC :: Apoc Extended Integration Tests Module'

test {
    maxParallelForks = 1
}

//compileTestJava.dependsOn tasks.getByPath(':extended')


dependencies {
    apt project(':processor')
    apt group: 'org.neo4j', name: 'neo4j', version: neo4jVersionEffective   // mandatory to run @ServiceProvider based META-INF code generation

    def withoutJacksons = {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }    
    def withoutServers = {
        exclude group: 'org.eclipse.jetty'
        exclude group: 'org.eclipse.jetty.aggregate'
        exclude group: 'org.apache.hive', module: 'hive-service'
    }

    implementation project(":extended")
//    testImplementation(project(":extended", "test"))

//    implementation project(':common')
//    compileOnly project(":common")
//    compileOnly project(':test-utils')
//    api project(':test-utils')
//    compileOnly project(":extended")
//    testImplementation project(":extended")
    testImplementation group: 'us.fatehi', name: 'schemacrawler-mysql', version: '15.04.01'

    testImplementation project(':core')
    testImplementation project(':test-utils')
    testImplementation project(':common')
    testImplementation project(':extended')
    testImplementation project(':core').sourceSets.test.output
    compileOnly project(':extended').sourceSets.main.allJava
    testImplementation project(':extended').sourceSets.test.output
// https://stackoverflow.com/questions/5644011/multi-project-test-dependencies-with-gradle
//    testImplementation(testFixtures(project(":extended")))

    testImplementation files(project(':extended').sourceSets.test.output)
//    testImplementation project(path: ':extended', configuration: 'unitTestArtifact')

//    testImplementation files(project(':extended').sourceSets.test.output.classesDir)


//    api group: 'org.testcontainers', name: 'testcontainers', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'neo4j', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'elasticsearch', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'couchbase', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'mysql', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'postgresql', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'cassandra', version: testContainersVersion
//    api group: 'org.testcontainers', name: 'localstack', version: testContainersVersion
    
    testImplementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.425'
    testImplementation group: 'org.xmlunit', name: 'xmlunit-core', version: '2.9.1'
    testImplementation group: 'com.couchbase.client', name: 'java-client', version: '3.3.0', withoutJacksons
    testImplementation group: 'io.lettuce', name: 'lettuce-core', version: '6.1.1.RELEASE'
    testImplementation group: 'org.mongodb', name: 'mongodb-driver', version: '3.2.2', {
        exclude group: 'io.netty'
    }
    testImplementation group: 'org.apache.parquet', name: 'parquet-hadoop', version: '1.13.1', withoutServers

    configurations.all {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

//plugins {
//    id 'java'
//}
//
//group 'org.neo4j.procedure'
//version '5.14.0'
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
//}
//
//test {
//    useJUnitPlatform()
//}